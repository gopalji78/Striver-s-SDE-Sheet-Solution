Problem Link: https://www.codingninjas.com/studio/problems/palindrome-partitioning_8230726?challengeSlug=striver-sde-challenge&leftPanelTab=0

#include <bits/stdc++.h> 
bool isPalindrome(string& s, int start, int end) {
    while (start<=end) {
        if (s[start] != s[end]) return false;
        start++;
        end--;
    }
    return true;
}
void solver(int index, string& s, vector<string>& curr, vector<vector<string>>& ans) {
    if (index == s.length()) {
        ans.push_back(curr);
        return;
    }

    for (int i=index; i<s.size(); i++) {
        if (isPalindrome(s, index, i)) {
            curr.push_back(s.substr(index, i-index+1));
            solver(i+1, s, curr, ans);
            curr.pop_back();
        }
    }
}



vector<vector<string>> partition(string &s) 
{
    vector<vector<string>> ans;
    vector<string> curr;
    solver(0, s, curr, ans);
    return ans;
}
