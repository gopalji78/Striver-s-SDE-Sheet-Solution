Problem Link: https://www.codingninjas.com/codestudio/problems/vertical-order-traversal_8230758?challengeSlug=striver-sde-challenge&leftPanelTab=0

#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{

    if (root == NULL) return {};
    map<int, map<int, vector<int>>> hash;  // map<x, <y, node->data>> 
    queue<pair<int, pair<int, TreeNode<int>*>>> q;
    q.push({0, {0, root}});

    while (!q.empty()) {
        int sz = q.size();
        while (sz--) {
            auto it = q.front();
            q.pop();
            TreeNode<int>* node = it.second.second;
            int x = it.first;
            int y = it.second.first;

            hash[x][y].push_back(node->data);

            if (node->left) q.push({x-1, {y+1, node->left}});

            if (node->right) q.push({x+1, {y+1, node->right}});
        }
    }

    vector<int> ans;
    for (auto it: hash) {
        for (auto i:it.second) {
            for (auto k: i.second) ans.push_back(k);
        }
    }
    return ans;
}
