Problem Link: https://www.codingninjas.com/studio/problems/flatten-binary-tree-to-linked-list_8230817?challengeSlug=striver-sde-challenge&leftPanelTab=0

#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure.

    template <typename T>
    class TreeNode {
        public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
// TreeNode<int>* prev = NULL;
void solver(TreeNode<int>* &node, TreeNode<int>* &prev) {
    if (node == NULL) return;
    solver(node->right, prev);
    solver(node->left, prev);
    node->right = prev;
    node->left = NULL;
    prev = node;
}
TreeNode<int> *flattenBinaryTree(TreeNode<int> *root)
{
    TreeNode<int>* prev = NULL;
    solver(root, prev);
    return root;


}
