Problem Link: https://www.codingninjas.com/studio/problems/pair-sum-in-bst_8230756?challengeSlug=striver-sde-challenge&leftPanelTab=1

#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
class TIterator{
    public:
    stack<BinaryTreeNode<int>*> st;
    bool reverse = true;

    TIterator(BinaryTreeNode<int>* root, bool isReverse) {
        reverse = isReverse;
        pushAll(root);
    }

    int next() {
        BinaryTreeNode<int>* node = st.top();
        st.pop();
        if (reverse) {
            pushAll(node->left);
        }
        else {
            pushAll(node->right);
        }
        return node->data;
    }

    void pushAll(BinaryTreeNode<int>* node) {
        for (; node!= NULL; ) {
            st.push(node);
            if (reverse) {
                node = node->right;
            }
            else {
                node = node->left;
            }
        }
    }
};
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    if (root == NULL) return false;
    TIterator l(root, false);
    TIterator r(root, true);

    int i = l.next();
    int j = r.next();

    while (i<j) {
        if (i+j == k) return true;
        else if (i+j > k) j = r.next();
        else i = l.next();
    }
    return false;
}
