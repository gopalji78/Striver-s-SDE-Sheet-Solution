Problem Link: https://www.codingninjas.com/studio/problems/k-th-largest-number-bst_8230750?challengeSlug=striver-sde-challenge&leftPanelTab=0

#include <bits/stdc++.h> 
/************************************************************
    Following is the Binary Search Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
int helper(TreeNode<int>* root, int& k) {
    if (root == NULL) return 1e9;

    int rightCall = helper(root->right, k);
    if (rightCall != 1e9) return rightCall;

    k--;
    if (k == 0) return root->data;

    return helper(root->left, k);
}

int KthLargestNumber(TreeNode<int>* root, int k) 
{
    int ans = helper(root, k);

    if (ans == 1e9) return -1;
    return ans;
} 
