Problem Link: https://www.codingninjas.com/studio/problems/m-coloring-problem_8230777?challengeSlug=striver-sde-challenge&leftPanelTab=0

#include <bits/stdc++.h> 
bool isPossible(vector<int> adjLs[], int node, int color, vector<int>& vis){
    for (auto nodes: adjLs[node]) {
        if (vis[nodes] == color) return false;
    }
    return true;
}
bool solver(vector<int> adjLs[], int node, int m, int n, vector<int>& vis) {
    if (node == n) return true;

    for (int color=1; color<=m; color++) {
        if (isPossible(adjLs, node, color, vis)) {
            vis[node] = color;
            if (solver(adjLs, node+1, m, n, vis)) return true;
            vis[node] = -1;
        }
    }
    return false;
}
string graphColoring(vector<vector<int>> &mat, int m) {
    int n = mat.size();
    vector<int> adjLs[n];
    vector<int> vis(n, -1);
    for (int i=0; i<n; i++) {
        for (int j=0; j<n; j++) {
            if (mat[i][j] == 1) {
                adjLs[i].push_back(j);
            }
        }
    }

    if (solver(adjLs, 0, m, n, vis)) return "YES" ;
    return "NO";

}
