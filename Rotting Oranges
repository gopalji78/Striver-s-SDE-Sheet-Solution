Problem Link: https://www.codingninjas.com/studio/problems/rotting-oranges_8230701?challengeSlug=striver-sde-challenge&leftPanelTab=0

#include "bits/stdc++.h"

int minTimeToRot(vector<vector<int>>& grid, int n, int m)
{
    int t = 0;
    vector<vector<int>> vis(n, vector<int>(m, 0));
    queue<pair<pair<int,int>, int>> q;
    int cntFresh = 0;
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            if (grid[i][j] == 2) {
                vis[i][j] = 2;
                q.push({{i, j}, 0});
            }

            if (grid[i][j] == 1) cntFresh++;
        }
    }

    int dx[] = {1, -1, 0, 0};
    int dy[] = {0, 0, 1, -1};
    int rotten = 0;

    while (!q.empty()) {
        int r = q.front().first.first;
        int c = q.front().first.second;
        int curTime = q.front().second;
        q.pop();

        t = max(curTime, t);

        for (int i=0; i<4; i++) {
            int new_r = r + dx[i];
            int new_c = c + dy[i];

            if (new_r>=0 && new_r<n && new_c>=0 && new_c<m &&
            vis[new_r][new_c] == 0 && grid[new_r][new_c] == 1) {
                rotten++;
                q.push({{new_r, new_c}, curTime+1});
                vis[new_r][new_c] = 2;
            }
        }
    }


    if (rotten != cntFresh) return -1;
    return t;
}
