Problem Link: https://www.codingninjas.com/codestudio/problems/rotate-linked-list_8230752?challengeSlug=striver-sde-challenge&leftPanelTab=0

/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     Node* temp = head;
     int n = 0;

     while (temp != NULL) {
          temp = temp->next;
          n++;
     }
     k = k%n;
     
     Node* first = head;
     Node* second = head;

     while (first != NULL && k--){
          first = first->next;
     }

     while (first->next != NULL){
          first = first->next;
          second = second->next;
     }
     first->next = head;
     Node* newHead = second->next;
     second->next = NULL;
     return newHead;
}
