Problem Link: https://www.codingninjas.com/studio/problems/prim-s-mst_8230809?challengeSlug=striver-sde-challenge&leftPanelTab=1

#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    //creating graph
    vector<pair<int, int>> adj[n+1];
    for (auto it: g) {
        int u = it.first.first;
        int v = it.first.second;
        int wt = it.second;

        adj[u].push_back({v, wt});
        adj[v].push_back({u, wt});
  
    }
    //declaring visited array
    vector<int> vis(n+1, 0);
    vector<pair<pair<int, int>, int>> mst;

    //declaring min-heap
    priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>,
                greater<pair<int, pair<int, int>>>> pq;

    //pushing the first node
    pq.push({0, {1, -1}});

    while (!pq.empty()) {
        auto it = pq.top();
        pq.pop();
        int node = it.second.first;
        int parent = it.second.second;
        int wt = it.first;
        
        if (vis[node] == 1) continue;
        
        vis[node] = 1;

        if (parent != -1) {
            mst.push_back({{parent, node}, wt});
        }
        
        for (auto it: adj[node]) {
            int adjNd =  it.first;
            int adjWt = it.second;

            if (!vis[adjNd]) {
                pq.push({adjWt, {adjNd, node}});
            }
        }
    }

    // auto it = mst.begin();
    // mst.erase(it);
    return mst;

}
